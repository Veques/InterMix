<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:fa="http://schemas.fontawesome.com/icons/" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- CTRL + M, CTRL + L for better view -->
    
    
    <!-- PERSONALIZATION -->
    <!-- Radio Buttons for Personalization-->
    <Style x:Key="PRS_RadioButton" TargetType="RadioButton">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border>
                        <materialDesign:PackIcon Name="Icon" Height="40" Width="38" Kind="HexagonSlice6"/>
                        <!--<fa:ImageAwesome Width="30" Height="30" Icon="Solid_Circle" Foreground="{TemplateBinding Foreground}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Opacity" Value="0.43"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="38"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- LOGIN WINDOW -->
    <!-- Login Window - TextBox -->
    <Style x:Key="LoginTextBox" TargetType="TextBox">

        <Setter Property="Background" Value="{DynamicResource LW_TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource LW_TextBoxForeground}"/>

        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="16.5"/>
        <Setter Property="Margin" Value="0 5 0 5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate TargetType="TextBox">
                    <Border CornerRadius="4.5" Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer Margin="6 0 0 0" x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Password BoX -->
    <Style x:Key="PasswordBox" TargetType="PasswordBox">

        <Setter Property="Background" Value="{DynamicResource LW_TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource LW_TextBoxForeground}"/>

        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0 5 0 5"/>
        <Setter Property="FontSize" Value="16.5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate TargetType="PasswordBox">
                    <Border CornerRadius="4.5" Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer Margin="6 0 0 0" x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Login Window Buttons -->
    <Style x:Key="LW_Buttons" TargetType="Button">

        <Setter Property="Background" Value="{DynamicResource LW_ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource LW_Font}"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="9">
                        <!--<Border.Effect>
                            <DropShadowEffect BlurRadius="40" ShadowDepth="3" Color="Black"  Opacity="0.6" />
                        </Border.Effect>-->
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Opacity"  Value="0.85"/>

                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="1" Color="{DynamicResource LeadingColor}"  Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource LW_ButtonBackground}"/>
                                        <Setter Property="Opacity" Value="1"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource LW_onHoverBorder}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <TextBlock Text="{TemplateBinding Button.Content}"
                                       FontSize="16"
                                       FontWeight="DemiBold"
                                       Foreground="{DynamicResource LW_Font}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="{TemplateBinding Padding}"
                                       TextWrapping="Wrap"
                                       Padding="2"
                                       TextAlignment="Center"
                                       Height="auto"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- MAIN WINDOW -->
    <!-- ListViewItem Style -->
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Height" Value="110"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4.1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.7,1" StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource LeadingColor}" Offset="1"/>
                                        <GradientStop Color="{DynamicResource SecondaryLeadingColor}" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect" TargetName="Bd">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="30" ShadowDepth="0" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>

                            <!--<Setter Property="Background" TargetName="Bd" Value="red"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="blue"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Window Button styles -->
    <Style x:Key="WindowBarButtons" TargetType="Button">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource LW_Font}"/>
        <Setter Property="Margin" Value="2 0 2 0"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" 
                            Padding="6"
                            Background="{TemplateBinding Background}" 
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="black"/>
                                <Setter Property="BorderThickness" Value="3"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="15" ShadowDepth="2" Color="{DynamicResource LW_onHoverShadow}"  Opacity="0.25"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LW_onHoverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Main Window Images -->
    <Style x:Key="MW_Images" TargetType="Image">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>

    <!-- Back Buttons with animation -->
    <Style x:Key="BackButtons" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MW_BackgroundBackButton}"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0:0:0.250" To="0" 
                                                            Storyboard.TargetProperty="BorderThickness" />
                            <DoubleAnimation Duration="0:0:0.550" To="120" 
                                                            Storyboard.TargetProperty="Height" />
                            <DoubleAnimation Duration="0:0:0.550" To="120" 
                                                            Storyboard.TargetProperty="Width" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0:0:0.250" To="0" 
                                                            Storyboard.TargetProperty="BorderThickness" />
                            <DoubleAnimation Duration="0:0:0.550" To="100" 
                                                            Storyboard.TargetProperty="Height" />
                            <DoubleAnimation Duration="0:0:0.550" To="100" 
                                                            Storyboard.TargetProperty="Width" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TICTACTOE GAME -->
    <!-- Choose Game Type | TicTacToe Buttons -->
    <Style TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource MW_Font}"/>
        <Setter Property="Background" Value="{DynamicResource TTT_ButtonsColor}"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{DynamicResource TTT_ButtonsColor}"/>
                                <Setter Property="BorderThickness" Value="3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TTT_ButtonsColor}"/>
                                <Setter Property="CornerRadius" Value="4"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="20" ShadowDepth="2" Direction="0" Color="{DynamicResource TTT_onHoverButtonShadow}"  Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource TTT_ButtonsColor}"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource TTT_ButtonChecked}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TicTacToe Buttons -->
    <Style x:Key="TTTG_Buttons" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource LW_ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource LW_Font}"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3">
                        <!--<Border.Effect>
                            <DropShadowEffect BlurRadius="40" ShadowDepth="3" Color="Black"  Opacity="0.6" />
                        </Border.Effect>-->
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0.5"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TTTG_ButtonBackground}"/>

                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.200" To="4" 
                                                            Storyboard.TargetProperty="BorderThickness" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.200" To="0.5" 
                                                            Storyboard.TargetProperty="BorderThickness" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>

                                    <!--<Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="5" ShadowDepth="1" Color="{DynamicResource TTT_onHoverButtonShadow}"  Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>-->

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource TTTG_ButtonBackgroundOnHover}"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TTTG_onHoverBorder}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <TextBlock Text="{TemplateBinding Button.Content}"
                                       FontSize="110"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="{TemplateBinding Padding}"
                                       TextWrapping="Wrap"
                                       Padding="2"
                                       TextAlignment="Center"
                                       Height="auto"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CURRENCY CONVERTER -->
    <!-- ComboBoxes in Converter -->
    <Style x:Key="ComboBoxes_CC" TargetType="ComboBox" 
           BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="Width" Value="260"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CC_ComboBoxBorder}"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource CC_ComboBoxUnderline}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource CC_ComboBoxUnderline}"/>
        <Setter Property="materialDesign:TextBlockAssist.AutoToolTip" Value="True"/>

    </Style>

    <!-- TextBoxes in Converter -->
    <Style x:Key="TextBoxes_CC" TargetType="TextBox" 
           BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">

        <Setter Property="Width" Value="260"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        <Setter Property="materialDesign:TextFieldAssist.PrefixText" Value="$"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource CC_ComboBoxUnderline}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource CC_ComboBoxUnderline}"/>
        <Setter Property="materialDesign:ColorZoneAssist.Foreground" Value="AliceBlue"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CC_ComboBoxBorder}"/>

    </Style>
    
    <!-- Convert Button -->
    <Style x:Key="ConvertButton_CC" TargetType="Button" 
           BasedOn="{StaticResource MaterialDesignFloatingActionLightButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource CC_ComboBoxBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource MW_Font}"/>
        <Setter Property="Background" Value="{DynamicResource CC_ComboBoxBorder}"/>
    </Style>

    
    <!-- LIBRARY MANAGEMENT SYSTEM -->
    <!-- WINDOWS BUTTONS SYSTEM -->
    <Style x:Key="LMS_WindowButtons" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="0" Background="WhiteSmoke" CornerRadius="6" Opacity="0.6">
                        <ContentPresenter HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="3"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" From="0.6"  To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" From="1" To="0.6" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Main Buttons -->
    <Style x:Key="LMS_MainButtons" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Width" Value="135"/>
        <Setter Property="Height" Value="135"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="4" CornerRadius="13">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>

                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="15" ShadowDepth="2" Color="{DynamicResource LW_onHoverShadow}"  Opacity="0.25"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.200" To="0" 
                                                            Storyboard.TargetProperty="BorderThickness"  />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.200" To="4" 
                                                            Storyboard.TargetProperty="BorderThickness" FillBehavior="HoldEnd" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Black"   />
                <Setter Property="Foreground" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- DataGrid Headers -->
    <Style x:Key="DataGridHeader" TargetType="DataGridColumnHeader" 
           BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>

            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>

        </Style>
    <!-- DataGrid Cells -->
    <Style x:Key="DataGridCell" TargetType="DataGridCell" 
           BasedOn="{StaticResource MaterialDesignDataGridCell}">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>
    
    <!-- DataGrid Column Proper Wrapping and Alignment -->
    <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Same for checkbox columns -->
    <Style x:Key="DataGridColumnStyleChkbx" TargetType="CheckBox" 
           BasedOn="{StaticResource MaterialDesignDarkCheckBox}">
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="materialDesign:CheckBoxAssist.CheckBoxSize" Value="25"/>

    </Style>

    <!-- DataGrid Row -->
    <Style x:Key="DataGridRow" TargetType="DataGridRow">
        <Setter Property="Height" Value="auto"/>
    </Style>
    
    <!-- Filters -->
    <Style x:Key="LMS_Filters" TargetType="TextBox" 
           BasedOn="{StaticResource MaterialDesignFilledTextBox}">

        <Setter Property="Height" Value="50"/>
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="Filter"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="white"/>
    </Style>

    <!-- DataGrids -->
    <Style x:Key="LMS_DataGrids" TargetType="DataGrid" 
           BasedOn="{StaticResource MaterialDesignDataGrid}">

        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Visible"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="25 0 25 15"/>

    </Style>


</ResourceDictionary>